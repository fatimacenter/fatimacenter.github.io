{"version":3,"file":"static/js/692.2cf23beb.chunk.js","mappings":"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","sources":["pages/CheckoutPage.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/init/init.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js"],"sourcesContent":["import { Link, useNavigate, Navigate } from \"react-router-dom\"\r\nimport React, { useRef, useEffect } from 'react';\r\nimport emailjs from '@emailjs/browser';\r\n\r\nfunction CheckoutPage(props){\r\n    const form = useRef();\r\n    useEffect(()=>{\r\n      var mess = \"\"\r\n      let m = document.getElementById(\"message-content\")\r\n      props.cart.forEach(e => {\r\n        mess += e.name + \" x\" + e.quantity\r\n        mess += \"\\n\"\r\n      });\r\n      mess += \"\\n\"\r\n      mess += \"Total: Php\" + props.total + \".00\" \r\n      m.value = mess\r\n    }, [])\r\n\r\n    const navigate = useNavigate();\r\n    const handleCheckout = () => navigate('/offers');\r\n\r\n    if(props.cart.length === 0){\r\n      return <Navigate to=\"/offers\" />\r\n    }\r\n\r\n\r\n\r\n    const sendEmail = (e) => {\r\n      e.preventDefault();\r\n  \r\n      emailjs.sendForm('service_kvmiqle', 'template_cgqn3n7', form.current, 'TC7u0--65-QZ5_vCI')\r\n        .then((result) => {\r\n            console.log(result.text);\r\n        }, (error) => {\r\n            console.log(error.text);\r\n        });\r\n      props.setSuccessCheckout(true)\r\n      props.setCart([])\r\n        handleCheckout()\r\n        \r\n    };\r\n\r\n\r\n    return <div id=\"checkout-main\">\r\n\r\n\r\n    <div class=\"card\">\r\n    <div class=\"leftside\">\r\n      {/* <img\r\n        src=\"https://i.pinimg.com/originals/18/9d/dc/189ddc1221d9c1c779dda4ad37a35fa1.png\"\r\n        class=\"product\"\r\n        alt=\"Shoes\"\r\n      /> */}\r\n    </div>\r\n    <div class=\"rightside\">\r\n      <form ref={form}  onSubmit={sendEmail}>\r\n        <h1>CheckOut</h1>\r\n        <h2>Customer Information</h2>\r\n        <p>Full Name</p>\r\n        <input type=\"text\" class=\"inputbox\" name=\"name\" required />\r\n        <p>Contact Number</p>\r\n        <input type=\"tel\" class=\"inputbox\" name=\"number\" id=\"card_number\" required />\r\n        <p>Email</p>\r\n        <input type=\"email\" class=\"inputbox\" name=\"email\" id=\"card_number\" required />\r\n        <hr />\r\n        {/* <p>Card Type</p>\r\n        <select class=\"inputbox\" name=\"card_type\" id=\"card_type\" required>\r\n          <option value=\"\">--Select a Card Type--</option>\r\n          <option value=\"Visa\">Visa</option>\r\n          <option value=\"RuPay\">RuPay</option>\r\n          <option value=\"MasterCard\">MasterCard</option>\r\n        </select> */}\r\n{/* <div class=\"expcvv\">\r\n\r\n        <p class=\"expcvv_text\">Expiry</p>\r\n        <input type=\"date\" class=\"inputbox\" name=\"exp_date\" id=\"exp_date\" required />\r\n\r\n        <p class=\"expcvv_text2\">CVV</p>\r\n        <input type=\"password\" class=\"inputbox\" name=\"cvv\" id=\"cvv\" required />\r\n    </div>\r\n        <p></p> */}\r\n        <h2>Total:  Php {props.total}.00</h2>\r\n        <textarea id=\"message-content\" name=\"list_of_items\" style={{display: \"none\"}}/>\r\n        <button type=\"submit\" class=\"button\">CheckOut</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  </div> \r\n}\r\n\r\nexport default CheckoutPage","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.10.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.10.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n"],"names":["props","form","useRef","useEffect","mess","m","document","getElementById","cart","forEach","e","name","quantity","total","value","navigate","useNavigate","length","to","id","class","ref","onSubmit","preventDefault","emailjs","current","then","result","console","log","text","error","setSuccessCheckout","setCart","type","required","style","display","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","status","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","currentForm","querySelector","nodeName","findHTMLForm","formData","FormData","append"],"sourceRoot":""}